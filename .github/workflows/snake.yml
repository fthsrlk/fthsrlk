name: Generate Classic Snake Animation

# Platane/snk dok√ºmantasyonuna g√∂re optimize edilmi≈ü en g√ºncel konfig√ºrasyon
on:
  # Manual trigger for immediate testing
  workflow_dispatch:
  
  # Smart push trigger - ignores documentation changes
  push:
    branches: [master, main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  
  # Weekly schedule - Sundays at midnight UTC (GitHub Actions best practice)
  schedule:
    - cron: "0 0 * * 0"

jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # GitHub contribution grid snake generation
      - name: Generate Classic Snake Animation
        uses: Platane/snk@v3
        with:
          # GitHub user name to read the contribution graph from (**required**)
          # Using action context var `github.repository_owner` 
          github_user_name: ${{ github.repository_owner }}
          
          # List of files to generate.
          # One file per line. Each output can be customized with options as query string.
          #
          # Supported options:
          # - palette: A preset of color, one of [github, github-dark, github-light]
          # - color_snake: Color of the snake
          # - color_dots: Comma separated list of dots color.
          #               The first one is 0 contribution, then it goes from low to highest.
          #               Exactly 5 colors are expected.
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Deploy to output branch for GitHub Profile README
      - name: Deploy Snake to Output Branch
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
          commit_message: "üêç Update classic snake animation - ${{ github.event.head_commit.message || 'Manual trigger' }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}